{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_API_URL : 'http://localhost:5000/api';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n\n  // Ensure headers object exists\n  if (!config.headers) {\n    config.headers = {};\n  }\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  // Log request details in development\n  if (process.env.NODE_ENV === 'development') {\n    console.log('API Request:', {\n      url: config.url,\n      method: config.method,\n      headers: config.headers\n    });\n  }\n  return config;\n}, error => {\n  console.error('Request Interceptor Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 500) {\n    var _error$config, _error$config2, _error$config3, _error$config4, _error$response2, _error$response3, _error$response4, _error$response4$data;\n    console.error('Server Error (500):', {\n      url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n      method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n      headers: (_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : _error$config3.headers,\n      data: (_error$config4 = error.config) === null || _error$config4 === void 0 ? void 0 : _error$config4.data,\n      response: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n      status: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status,\n      message: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || error.message\n    });\n  } else {\n    var _error$config5, _error$config6, _error$response5, _error$response6, _error$response6$data;\n    console.error('API Error:', {\n      url: (_error$config5 = error.config) === null || _error$config5 === void 0 ? void 0 : _error$config5.url,\n      method: (_error$config6 = error.config) === null || _error$config6 === void 0 ? void 0 : _error$config6.method,\n      status: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status,\n      message: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || error.message\n    });\n  }\n  throw error;\n});\nexport const authAPI = {\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  signup: async credentials => {\n    const response = await api.post('/auth/signup', credentials);\n    return response.data;\n  },\n  getUser: async () => {\n    const response = await api.get('/auth/user');\n    return response.data;\n  }\n};\nexport const blogAPI = {\n  getBlogs: async (page = 1, limit = 10) => {\n    const response = await api.get(`/blogs?page=${page}&limit=${limit}`);\n    return response.data;\n  },\n  getBlog: async id => {\n    const response = await api.get(`/blogs/${id}`);\n    return response.data;\n  },\n  createBlog: async blogData => {\n    try {\n      const response = await api.post('/blogs', blogData, {\n        headers: {\n          'Content-Type': blogData instanceof FormData ? 'multipart/form-data' : 'application/json'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error in createBlog:', error);\n      throw error;\n    }\n  },\n  updateBlog: async (id, blogData) => {\n    try {\n      const response = await api.put(`/blogs/${id}`, blogData, {\n        headers: {\n          'Content-Type': blogData instanceof FormData ? 'multipart/form-data' : 'application/json'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error in updateBlog:', error);\n      throw error;\n    }\n  },\n  deleteBlog: async id => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Authentication token not found');\n      }\n\n      // Log the delete attempt\n      console.log('Attempting to delete blog:', {\n        id,\n        token: token ? 'Present' : 'Missing'\n      });\n      const response = await api.delete(`/blogs/${id}`);\n\n      // Log successful deletion\n      console.log('Blog deleted successfully:', {\n        id,\n        response: response.data\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response7, _error$response8;\n      // Log detailed error information\n      console.error('Error in deleteBlog:', {\n        id,\n        error: ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message,\n        status: (_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status,\n        stack: error.stack\n      });\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","NODE_ENV","REACT_APP_API_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","console","log","url","method","error","Promise","reject","response","_error$response","status","_error$config","_error$config2","_error$config3","_error$config4","_error$response2","_error$response3","_error$response4","_error$response4$data","data","message","_error$config5","_error$config6","_error$response5","_error$response6","_error$response6$data","authAPI","login","credentials","post","signup","getUser","get","blogAPI","getBlogs","page","limit","getBlog","id","createBlog","blogData","FormData","updateBlog","put","deleteBlog","Error","delete","_error$response7","_error$response8","stack"],"sources":["C:/Users/STUDIO PC/OneDrive/Desktop/OmnifyProject/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.NODE_ENV === 'production'\r\n  ? process.env.REACT_APP_API_URL\r\n  : 'http://localhost:5000/api';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true,\r\n});\r\n\r\n// Add token to requests if it exists\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    // Ensure headers object exists\r\n    if (!config.headers) {\r\n      config.headers = {};\r\n    }\r\n\r\n    if (token) {\r\n      config.headers['x-auth-token'] = token;\r\n    }\r\n\r\n    // Log request details in development\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('API Request:', {\r\n        url: config.url,\r\n        method: config.method,\r\n        headers: config.headers,\r\n      });\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request Interceptor Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 500) {\r\n      console.error('Server Error (500):', {\r\n        url: error.config?.url,\r\n        method: error.config?.method,\r\n        headers: error.config?.headers,\r\n        data: error.config?.data,\r\n        response: error.response?.data,\r\n        status: error.response?.status,\r\n        message: error.response?.data?.message || error.message,\r\n      });\r\n    } else {\r\n      console.error('API Error:', {\r\n        url: error.config?.url,\r\n        method: error.config?.method,\r\n        status: error.response?.status,\r\n        message: error.response?.data?.message || error.message,\r\n      });\r\n    }\r\n    throw error;\r\n  }\r\n);\r\n\r\nexport const authAPI = {\r\n  login: async (credentials) => {\r\n    const response = await api.post('/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n\r\n  signup: async (credentials) => {\r\n    const response = await api.post('/auth/signup', credentials);\r\n    return response.data;\r\n  },\r\n\r\n  getUser: async () => {\r\n    const response = await api.get('/auth/user');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const blogAPI = {\r\n  getBlogs: async (page = 1, limit = 10) => {\r\n    const response = await api.get(`/blogs?page=${page}&limit=${limit}`);\r\n    return response.data;\r\n  },\r\n\r\n  getBlog: async (id) => {\r\n    const response = await api.get(`/blogs/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createBlog: async (blogData) => {\r\n    try {\r\n      const response = await api.post('/blogs', blogData, {\r\n        headers: {\r\n          'Content-Type': blogData instanceof FormData ? 'multipart/form-data' : 'application/json'\r\n        }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error in createBlog:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateBlog: async (id, blogData) => {\r\n    try {\r\n      const response = await api.put(`/blogs/${id}`, blogData, {\r\n        headers: {\r\n          'Content-Type': blogData instanceof FormData ? 'multipart/form-data' : 'application/json'\r\n        }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error in updateBlog:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  deleteBlog: async (id) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('Authentication token not found');\r\n      }\r\n\r\n      // Log the delete attempt\r\n      console.log('Attempting to delete blog:', {\r\n        id,\r\n        token: token ? 'Present' : 'Missing',\r\n      });\r\n\r\n      const response = await api.delete(`/blogs/${id}`);\r\n      \r\n      // Log successful deletion\r\n      console.log('Blog deleted successfully:', {\r\n        id,\r\n        response: response.data,\r\n      });\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      // Log detailed error information\r\n      console.error('Error in deleteBlog:', {\r\n        id,\r\n        error: error.response?.data || error.message,\r\n        status: error.response?.status,\r\n        stack: error.stack,\r\n      });\r\n      throw error;\r\n    }\r\n  },\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}